import json, os, shutil

class MetaToController:
    def __init__(self, json_data, dir="", exc=[]):
        """
        Inisialisasi MetaToRes dengan data JSON.
        :param json_data: Data JSON yang berisi definisi tabel.
        """
        if isinstance(json_data, str):
            self.json_data = json.loads(json_data)
        elif isinstance(json_data, dict):  # Sesuaikan jika data berupa list
            self.json_data = json_data
        else:
            raise ValueError("Input harus berupa string JSON atau list dictionary.")

        self.exc = exc
        self.dir = "/" + dir if dir else ""

    def ubah_nama(self,input_text):
        """
        Mengubah teks dengan format snake_case menjadi PascalCase.
        Contoh:
        - "jenis_barang" -> "JenisBarangController"
        """
        if not input_text:
            return ""
        # Pecah teks berdasarkan underscore (_), kapitalisasi setiap kata, lalu gabungkan
        if(input_text.lower() == 'users'):
            return "User"
        return ''.join(word.capitalize() for word in input_text.split('_'))
    

    def get_class_rel_dir(self, table_data, table_name):
        for i in table_data:
            if(i['table'] == table_name):
                return f"App\Http\Controllers{self.dir}\\" + ( i['dir'] + "\\" ) if i['dir'] else f"App\Http\Controllers{self.dir}\\"
        return f"App\Http\Controllers{self.dir}\\"


    def json_to_model(self, table_data, refs_data):
        dir        = ( '\\' + table_data["dir"] ).replace('/','\\') if table_data["dir"] else ""
        table_name = table_data["table"]
        columns    = table_data["items"]
        model_name = self.ubah_nama(table_name)
 
        #-------------------------------------------------
        mod = '<?php \n'
        mod+= '//Generated by ArindyProject -> https://github.com/arindyproject/dbdiagram2laravel \n'
        mod+= 'namespace App\Http\Controllers'+self.dir.replace("/","\\")+dir+'; \n\n'
        mod+= 'use App\Http\Controllers\Controller; \n'
        mod+= 'use Illuminate\Http\Request; \n'
        mod+= 'use Illuminate\Support\Facades\Auth; \n'
        mod+= 'use Illuminate\Support\Facades\Validator; \n'
        mod+= ' \n'
        mod+= 'use App\Http\Resources\BaseResource; \n'
        mod+= 'use App\Http\Resources' + dir + '\\' + model_name + 'Resources; \n'
        mod+= 'use App\Models' + dir + '\\' + model_name + '; \n'
        mod+= ' \n'

        mod+= 'Class ' + model_name+ 'Controller' + ' extends Controller { \n'
        #construct
        #-------------------------------------------------
        mod+= '    //construct----------------------------------------------\n'
        mod+= '    public function __construct(){\n'
        mod+= f'        $this->model = new {model_name};\n'
        mod+= f'        $this->res   = new {model_name}Resources(null);\n'
        mod+= '    }\n'
        mod+= '    //end_construct------------------------------------------\n\n\n'
        #-------------------------------------------------

        #list
        #-------------------------------------------------
        mod+= '    //list---------------------------------------------------\n'
        mod+= '    public function list(){\n'

        mod+= '    }\n'
        mod+= '    //end_list-----------------------------------------------\n\n\n'
        #-------------------------------------------------

        #show
        #-------------------------------------------------
        mod+= '    //show---------------------------------------------------\n'
        mod+= '    public function show($id){\n'

        mod+= '    }\n'
        mod+= '    //end_show-----------------------------------------------\n\n\n'
        #-------------------------------------------------

        #create
        #-------------------------------------------------
        mod+= '    //create-------------------------------------------------\n'
        mod+= '    public function create(Request $request){\n'

        mod+= '    }\n'
        mod+= '    //end_create---------------------------------------------\n\n\n'
        #-------------------------------------------------

        #update
        #-------------------------------------------------
        mod+= '    //update-------------------------------------------------\n'
        mod+= '    public function update(Request $request, $id){\n'

        mod+= '    }\n'
        mod+= '    //end_update---------------------------------------------\n\n\n'
        #-------------------------------------------------

        #delete
        #-------------------------------------------------
        mod+= '    //delete-------------------------------------------------\n'
        mod+= '    public function delete($id){\n'

        mod+= '    }\n'
        mod+= '    //end_delete---------------------------------------------\n\n\n'
        #-------------------------------------------------

        #-------------------------------------------------
        mod+= '} \n'
        #-------------------------------------------------
        return {
            'table' : table_name,
            'model' : model_name,
            'path'  : '/' + table_data["dir"] if table_data["dir"] else '',
            'class' : mod
        }
    
    def process_and_save(self):
        # Path ke direktori yang akan dihapus
        models_dir = "out/app/Http/Controllers" 

        print('\n\n+=============================================+')
        print('|             Generating Controllers          |')
        print('+=============================================+')

        # Hapus direktori jika ada
        if os.path.exists(models_dir):
            shutil.rmtree(models_dir)
            print(f"Direktori {models_dir} berhasil dihapus.")

        table_data = self.json_data['tabels']
        refs_data = self.json_data['refs']

        models_dir = models_dir + self.dir
        
        total_file = 0
        for i in table_data:
            if i['table'].lower() not in [exc_item.lower() for exc_item in self.exc]:
                total_file += 1
                d = self.json_to_model(i, refs_data)
                output_dir = models_dir + d['path']
                
                # Membuat folder jika belum ada
                os.makedirs(output_dir, exist_ok=True)
                
                # Path untuk file model
                output_path = output_dir + "/" + d['model'] + 'Controller' + '.php'
                
                # Menulis file model
                with open(output_path, "w") as file:
                    file.write(d['class'])

                print(f"Controllers berhasil disimpan di {output_path}")
                #print(d['class'])
                #print(json.dumps(d, indent=4))
        print('+=============================================+')
        print(f"Total File                   : {total_file}")
        if(self.exc):
            print(f"Total pengecualian           : {len(self.exc)}")
            print(f"Memproses dengan pengecualian: {self.exc}")
        
        print('+=============================================+')